openapi: 3.1.0
info:
  title: Todo API
  summary: A simple API to manage todos
  description: A simple API to manage todos built with Rails in API mode
  version: 1.0.0
  contact:
    name: Bijan Rahnema
    email: bijan@screenisland.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /todos:
    get:
      tags:
        - todos
      summary: Get all todos
      description: Returns all todos that have been stored to the database
      operationId: getTodos
      responses:
        '200':
          description: A list of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      tags:
        - todos
      summary: Create a todo
      description: Creates a new todo and returns it
      operationId: createTodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequest'
      responses:
        '201':
          description: The created todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /todos/{id}:
    get:
      tags:
        - todos
      summary: Get a todo
      description: Returns a todo by id
      operationId: getTodo
      parameters:
        - name: id
          in: path
          description: The id of the todo
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '422':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - todos
      summary: Update a todo
      description: Updates a todo by id and returns it
      operationId: updateTodo
      parameters:
        - name: id
          in: path
          description: The id of the todo
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequest'
      responses:
        '200':
          description: The updated todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: deleteTodo
      tags:
        - todos
      summary: Delete a todo
      description: Deletes a todo by id
      parameters:
        - name: id
          in: path
          description: The id of the todo
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    TodoRequest:
      type: object
      properties:
        todo:
          $ref: '#/components/schemas/Todo'
      required:
        - todo
    Todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
        title:
          type: string
          examples:
            - Buy milk
        done:
          type: boolean
          examples:
            - false
        createdAt:
          type: string
          format: date-time
          examples:
            - 2024-01-01T12:00:00Z
        updatedAt:
          type: string
          format: date-time
          examples:
            - 2024-01-01T12:00:00Z
      required:
        - title
        - done
